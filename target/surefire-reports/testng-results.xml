<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="22" passed="14" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-05-08T10:02:59 IST" name="RegressionSuite" finished-at="2023-05-08T10:03:39 IST" duration-ms="40045">
    <groups>
    </groups>
    <test started-at="2023-05-08T10:02:59 IST" name="Test1" finished-at="2023-05-08T10:03:39 IST" duration-ms="40045">
      <class name="testClasses.QuotesPage1TestClass">
        <test-method is-config="true" signature="initializingQuotesPage1Object()[pri:0, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:13 IST" name="initializingQuotesPage1Object" finished-at="2023-05-08T10:03:13 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializingQuotesPage1Object -->
        <test-method signature="verifyMaleCheckboxText()[pri:1, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:13 IST" name="verifyMaleCheckboxText" finished-at="2023-05-08T10:03:13 IST" duration-ms="86" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMaleCheckboxText -->
        <test-method is-config="true" signature="capturesFailedScreenshots(org.testng.ITestResult)[pri:0, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:13 IST" name="capturesFailedScreenshots" finished-at="2023-05-08T10:03:13 IST" duration-ms="29" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyMaleCheckboxText status=SUCCESS method=QuotesPage1TestClass.verifyMaleCheckboxText()[pri:1, instance:testClasses.QuotesPage1TestClass@6b81ce95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capturesFailedScreenshots -->
        <test-method signature="verifyFemaleCheckboxText()[pri:2, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:13 IST" name="verifyFemaleCheckboxText" finished-at="2023-05-08T10:03:13 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFemaleCheckboxText -->
        <test-method is-config="true" signature="capturesFailedScreenshots(org.testng.ITestResult)[pri:0, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:13 IST" name="capturesFailedScreenshots" finished-at="2023-05-08T10:03:13 IST" duration-ms="29" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFemaleCheckboxText status=SUCCESS method=QuotesPage1TestClass.verifyFemaleCheckboxText()[pri:2, instance:testClasses.QuotesPage1TestClass@6b81ce95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capturesFailedScreenshots -->
        <test-method signature="verifyClickabilityOfFemaleCheckbox()[pri:3, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:13 IST" name="verifyClickabilityOfFemaleCheckbox" finished-at="2023-05-08T10:03:13 IST" duration-ms="104" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Test Case was intentionally Failed, Check Screenshot Attached for respective Test Case]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Test Case was intentionally Failed, Check Screenshot Attached for respective Test Case
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at testClasses.QuotesPage1TestClass.verifyClickabilityOfFemaleCheckbox(QuotesPage1TestClass.java:52)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyClickabilityOfFemaleCheckbox -->
        <test-method is-config="true" signature="capturesFailedScreenshots(org.testng.ITestResult)[pri:0, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:13 IST" name="capturesFailedScreenshots" finished-at="2023-05-08T10:03:13 IST" duration-ms="200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyClickabilityOfFemaleCheckbox status=FAILURE method=QuotesPage1TestClass.verifyClickabilityOfFemaleCheckbox()[pri:3, instance:testClasses.QuotesPage1TestClass@6b81ce95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capturesFailedScreenshots -->
        <test-method signature="verifyClickabilityOfMaleCheckbox()[pri:4, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:13 IST" name="verifyClickabilityOfMaleCheckbox" finished-at="2023-05-08T10:03:14 IST" duration-ms="108" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Test Case was intentionally Failed, Check Screenshot Attached for respective Test Case,
Test Case was intentionally Failed, Check Screenshot Attached for respective Test Case]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Test Case was intentionally Failed, Check Screenshot Attached for respective Test Case,
Test Case was intentionally Failed, Check Screenshot Attached for respective Test Case
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at testClasses.QuotesPage1TestClass.verifyClickabilityOfMaleCheckbox(QuotesPage1TestClass.java:61)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyClickabilityOfMaleCheckbox -->
        <test-method is-config="true" signature="capturesFailedScreenshots(org.testng.ITestResult)[pri:0, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:14 IST" name="capturesFailedScreenshots" finished-at="2023-05-08T10:03:14 IST" duration-ms="172" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyClickabilityOfMaleCheckbox status=FAILURE method=QuotesPage1TestClass.verifyClickabilityOfMaleCheckbox()[pri:4, instance:testClasses.QuotesPage1TestClass@6b81ce95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capturesFailedScreenshots -->
        <test-method signature="verifyTextOfYourFullNameLabel()[pri:5, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:14 IST" name="verifyTextOfYourFullNameLabel" finished-at="2023-05-08T10:03:14 IST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTextOfYourFullNameLabel -->
        <test-method is-config="true" signature="capturesFailedScreenshots(org.testng.ITestResult)[pri:0, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:14 IST" name="capturesFailedScreenshots" finished-at="2023-05-08T10:03:14 IST" duration-ms="25" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTextOfYourFullNameLabel status=SUCCESS method=QuotesPage1TestClass.verifyTextOfYourFullNameLabel()[pri:5, instance:testClasses.QuotesPage1TestClass@6b81ce95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capturesFailedScreenshots -->
        <test-method signature="verifyYourFullNameLabelByPassingBlankText()[pri:6, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:14 IST" name="verifyYourFullNameLabelByPassingBlankText" finished-at="2023-05-08T10:03:14 IST" duration-ms="207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyYourFullNameLabelByPassingBlankText -->
        <test-method is-config="true" signature="capturesFailedScreenshots(org.testng.ITestResult)[pri:0, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:14 IST" name="capturesFailedScreenshots" finished-at="2023-05-08T10:03:14 IST" duration-ms="27" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyYourFullNameLabelByPassingBlankText status=SUCCESS method=QuotesPage1TestClass.verifyYourFullNameLabelByPassingBlankText()[pri:6, instance:testClasses.QuotesPage1TestClass@6b81ce95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capturesFailedScreenshots -->
        <test-method signature="verifyYourFullNameLabelByPassingText()[pri:7, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:14 IST" name="verifyYourFullNameLabelByPassingText" finished-at="2023-05-08T10:03:16 IST" duration-ms="2323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyYourFullNameLabelByPassingText -->
        <test-method is-config="true" signature="capturesFailedScreenshots(org.testng.ITestResult)[pri:0, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:16 IST" name="capturesFailedScreenshots" finished-at="2023-05-08T10:03:16 IST" duration-ms="49" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyYourFullNameLabelByPassingText status=SUCCESS method=QuotesPage1TestClass.verifyYourFullNameLabelByPassingText()[pri:7, instance:testClasses.QuotesPage1TestClass@6b81ce95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capturesFailedScreenshots -->
        <test-method signature="verifyTextOfContinueButton()[pri:8, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:16 IST" name="verifyTextOfContinueButton" finished-at="2023-05-08T10:03:16 IST" duration-ms="107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTextOfContinueButton -->
        <test-method is-config="true" signature="capturesFailedScreenshots(org.testng.ITestResult)[pri:0, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:16 IST" name="capturesFailedScreenshots" finished-at="2023-05-08T10:03:17 IST" duration-ms="45" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTextOfContinueButton status=SUCCESS method=QuotesPage1TestClass.verifyTextOfContinueButton()[pri:8, instance:testClasses.QuotesPage1TestClass@6b81ce95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capturesFailedScreenshots -->
        <test-method signature="verifyClickabilityOfContinueButton()[pri:9, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:17 IST" name="verifyClickabilityOfContinueButton" finished-at="2023-05-08T10:03:20 IST" duration-ms="3029" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyClickabilityOfContinueButton -->
        <test-method is-config="true" signature="capturesFailedScreenshots(org.testng.ITestResult)[pri:0, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:20 IST" name="capturesFailedScreenshots" finished-at="2023-05-08T10:03:20 IST" duration-ms="29" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyClickabilityOfContinueButton status=SUCCESS method=QuotesPage1TestClass.verifyClickabilityOfContinueButton()[pri:9, instance:testClasses.QuotesPage1TestClass@6b81ce95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capturesFailedScreenshots -->
        <test-method signature="veirifyPrivacyPolicyIsDisplayed()[pri:10, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:20 IST" name="veirifyPrivacyPolicyIsDisplayed" finished-at="2023-05-08T10:03:22 IST" duration-ms="2040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- veirifyPrivacyPolicyIsDisplayed -->
        <test-method is-config="true" signature="capturesFailedScreenshots(org.testng.ITestResult)[pri:0, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:22 IST" name="capturesFailedScreenshots" finished-at="2023-05-08T10:03:22 IST" duration-ms="27" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=veirifyPrivacyPolicyIsDisplayed status=SUCCESS method=QuotesPage1TestClass.veirifyPrivacyPolicyIsDisplayed()[pri:10, instance:testClasses.QuotesPage1TestClass@6b81ce95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capturesFailedScreenshots -->
        <test-method signature="verifyClickabilityOfPrivacyPolicy()[pri:11, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:22 IST" name="verifyClickabilityOfPrivacyPolicy" finished-at="2023-05-08T10:03:26 IST" duration-ms="4179" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [https://www.policybazaar.com/legal-and-admin-policies/] but found [https://health.policybazaar.com/v2/proposer/1?utm_content=home_v12_newprequote]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [https://www.policybazaar.com/legal-and-admin-policies/] but found [https://health.policybazaar.com/v2/proposer/1?utm_content=home_v12_newprequote]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at testClasses.QuotesPage1TestClass.verifyClickabilityOfPrivacyPolicy(QuotesPage1TestClass.java:137)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyClickabilityOfPrivacyPolicy -->
        <test-method is-config="true" signature="capturesFailedScreenshots(org.testng.ITestResult)[pri:0, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:26 IST" name="capturesFailedScreenshots" finished-at="2023-05-08T10:03:26 IST" duration-ms="233" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyClickabilityOfPrivacyPolicy status=FAILURE method=QuotesPage1TestClass.verifyClickabilityOfPrivacyPolicy()[pri:11, instance:testClasses.QuotesPage1TestClass@6b81ce95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capturesFailedScreenshots -->
        <test-method signature="verifyTermsOfUseIsDisplayed()[pri:12, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:26 IST" name="verifyTermsOfUseIsDisplayed" finished-at="2023-05-08T10:03:28 IST" duration-ms="2077" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTermsOfUseIsDisplayed -->
        <test-method is-config="true" signature="capturesFailedScreenshots(org.testng.ITestResult)[pri:0, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:28 IST" name="capturesFailedScreenshots" finished-at="2023-05-08T10:03:28 IST" duration-ms="37" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTermsOfUseIsDisplayed status=SUCCESS method=QuotesPage1TestClass.verifyTermsOfUseIsDisplayed()[pri:12, instance:testClasses.QuotesPage1TestClass@6b81ce95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capturesFailedScreenshots -->
        <test-method signature="verifyClickabilityOfTermsOfUse()[pri:13, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:28 IST" name="verifyClickabilityOfTermsOfUse" finished-at="2023-05-08T10:03:28 IST" duration-ms="192" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Test Case was intentionally Failed, Check Screenshot Attached for respective Test Case,
Test Case was intentionally Failed, Check Screenshot Attached for respective Test Case,
expected [https://www.policybazaar.com/legal-and-admin-policies/#termsofuse] but found [https://health.policybazaar.com/v2/proposer/1?utm_content=home_v12_newprequote]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Test Case was intentionally Failed, Check Screenshot Attached for respective Test Case,
Test Case was intentionally Failed, Check Screenshot Attached for respective Test Case,
expected [https://www.policybazaar.com/legal-and-admin-policies/#termsofuse] but found [https://health.policybazaar.com/v2/proposer/1?utm_content=home_v12_newprequote]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at testClasses.QuotesPage1TestClass.verifyClickabilityOfTermsOfUse(QuotesPage1TestClass.java:158)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyClickabilityOfTermsOfUse -->
        <test-method is-config="true" signature="capturesFailedScreenshots(org.testng.ITestResult)[pri:0, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:28 IST" name="capturesFailedScreenshots" finished-at="2023-05-08T10:03:29 IST" duration-ms="231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyClickabilityOfTermsOfUse status=FAILURE method=QuotesPage1TestClass.verifyClickabilityOfTermsOfUse()[pri:13, instance:testClasses.QuotesPage1TestClass@6b81ce95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capturesFailedScreenshots -->
        <test-method signature="navigateBackToQuotePage1URL()[pri:14, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:29 IST" name="navigateBackToQuotePage1URL" finished-at="2023-05-08T10:03:39 IST" duration-ms="10540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateBackToQuotePage1URL -->
        <test-method is-config="true" signature="capturesFailedScreenshots(org.testng.ITestResult)[pri:0, instance:testClasses.QuotesPage1TestClass@6b81ce95]" started-at="2023-05-08T10:03:39 IST" name="capturesFailedScreenshots" finished-at="2023-05-08T10:03:39 IST" duration-ms="33" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateBackToQuotePage1URL status=SUCCESS method=QuotesPage1TestClass.navigateBackToQuotePage1URL()[pri:14, instance:testClasses.QuotesPage1TestClass@6b81ce95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capturesFailedScreenshots -->
      </class> <!-- testClasses.QuotesPage1TestClass -->
      <class name="testClasses.BaseClass">
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:testClasses.BaseClass@694abbdc]" started-at="2023-05-08T10:02:59 IST" name="openBrowser" finished-at="2023-05-08T10:03:03 IST" duration-ms="3317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:testClasses.BaseClass@694abbdc]" started-at="2023-05-08T10:03:39 IST" name="closeBrowser" finished-at="2023-05-08T10:03:39 IST" duration-ms="254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testClasses.BaseClass -->
      <class name="testClasses.LandingPageTestClass">
        <test-method is-config="true" signature="initializingLandingPageObject()[pri:0, instance:testClasses.LandingPageTestClass@6572421]" started-at="2023-05-08T10:03:03 IST" name="initializingLandingPageObject" finished-at="2023-05-08T10:03:03 IST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializingLandingPageObject -->
        <test-method signature="verifyHealthInsuranceIconIsDisplayed()[pri:1, instance:testClasses.LandingPageTestClass@6572421]" started-at="2023-05-08T10:03:03 IST" name="verifyHealthInsuranceIconIsDisplayed" finished-at="2023-05-08T10:03:03 IST" duration-ms="161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHealthInsuranceIconIsDisplayed -->
        <test-method is-config="true" signature="capturesFailedScreenshots(org.testng.ITestResult)[pri:0, instance:testClasses.LandingPageTestClass@6572421]" started-at="2023-05-08T10:03:03 IST" name="capturesFailedScreenshots" finished-at="2023-05-08T10:03:03 IST" duration-ms="312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHealthInsuranceIconIsDisplayed status=SUCCESS method=LandingPageTestClass.verifyHealthInsuranceIconIsDisplayed()[pri:1, instance:testClasses.LandingPageTestClass@6572421] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capturesFailedScreenshots -->
        <test-method signature="verifyHealthInsuranceIconText()[pri:2, instance:testClasses.LandingPageTestClass@6572421]" started-at="2023-05-08T10:03:03 IST" name="verifyHealthInsuranceIconText" finished-at="2023-05-08T10:03:04 IST" duration-ms="635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHealthInsuranceIconText -->
        <test-method is-config="true" signature="capturesFailedScreenshots(org.testng.ITestResult)[pri:0, instance:testClasses.LandingPageTestClass@6572421]" started-at="2023-05-08T10:03:04 IST" name="capturesFailedScreenshots" finished-at="2023-05-08T10:03:04 IST" duration-ms="47" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHealthInsuranceIconText status=SUCCESS method=LandingPageTestClass.verifyHealthInsuranceIconText()[pri:2, instance:testClasses.LandingPageTestClass@6572421] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capturesFailedScreenshots -->
        <test-method signature="verifyHealthInsuranceIconIsClickable()[pri:3, instance:testClasses.LandingPageTestClass@6572421]" started-at="2023-05-08T10:03:04 IST" name="verifyHealthInsuranceIconIsClickable" finished-at="2023-05-08T10:03:11 IST" duration-ms="7350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHealthInsuranceIconIsClickable -->
        <test-method is-config="true" signature="capturesFailedScreenshots(org.testng.ITestResult)[pri:0, instance:testClasses.LandingPageTestClass@6572421]" started-at="2023-05-08T10:03:11 IST" name="capturesFailedScreenshots" finished-at="2023-05-08T10:03:11 IST" duration-ms="38" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHealthInsuranceIconIsClickable status=SUCCESS method=LandingPageTestClass.verifyHealthInsuranceIconIsClickable()[pri:3, instance:testClasses.LandingPageTestClass@6572421] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capturesFailedScreenshots -->
        <test-method signature="moveToQuotePage1URL()[pri:4, instance:testClasses.LandingPageTestClass@6572421]" started-at="2023-05-08T10:03:11 IST" name="moveToQuotePage1URL" finished-at="2023-05-08T10:03:13 IST" duration-ms="1484" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- moveToQuotePage1URL -->
        <test-method is-config="true" signature="capturesFailedScreenshots(org.testng.ITestResult)[pri:0, instance:testClasses.LandingPageTestClass@6572421]" started-at="2023-05-08T10:03:13 IST" name="capturesFailedScreenshots" finished-at="2023-05-08T10:03:13 IST" duration-ms="49" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=moveToQuotePage1URL status=SUCCESS method=LandingPageTestClass.moveToQuotePage1URL()[pri:4, instance:testClasses.LandingPageTestClass@6572421] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capturesFailedScreenshots -->
      </class> <!-- testClasses.LandingPageTestClass -->
    </test> <!-- Test1 -->
  </suite> <!-- RegressionSuite -->
</testng-results>
